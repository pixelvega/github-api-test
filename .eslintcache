[{"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/index.tsx":"1","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/reportWebVitals.ts":"2","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/routes/Routes.tsx":"3","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Unknown/Unknown.tsx":"4","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/App/App.tsx":"5","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/services/useGetRepositories.ts":"6","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Header/Header.tsx":"7","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Searcher/Searcher.tsx":"8","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/context/SearcherContext.tsx":"9","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/TableResults/TableResults.tsx":"10","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Home/Home.tsx":"11","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Spinner/Spinner.tsx":"12"},{"size":680,"mtime":1610059022372,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608927878276,"results":"15","hashOfConfig":"14"},{"size":503,"mtime":1610059338313,"results":"16","hashOfConfig":"14"},{"size":96,"mtime":1609864586365,"results":"17","hashOfConfig":"14"},{"size":434,"mtime":1610059216386,"results":"18","hashOfConfig":"14"},{"size":751,"mtime":1609863986407,"results":"19","hashOfConfig":"14"},{"size":381,"mtime":1610210015313,"results":"20","hashOfConfig":"14"},{"size":1396,"mtime":1610230436386,"results":"21","hashOfConfig":"14"},{"size":595,"mtime":1610209342109,"results":"22","hashOfConfig":"14"},{"size":2096,"mtime":1610243245149,"results":"23","hashOfConfig":"14"},{"size":447,"mtime":1610242523766,"results":"24","hashOfConfig":"14"},{"size":114,"mtime":1610235757779,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1wgd25n",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/index.tsx",[],["52","53"],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/reportWebVitals.ts",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/routes/Routes.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Unknown/Unknown.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/App/App.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/services/useGetRepositories.ts",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Header/Header.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Searcher/Searcher.tsx",["54","55"],"import { useContext, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { SearcherContext } from 'context/SearcherContext';\nimport { useHistory } from 'react-router-dom';\nimport './Searcher.scss';\n\nexport default function Searcher() {\n  const history = useHistory();\n  const { searcherQuery, setSearcherQuery } = useContext(SearcherContext);\n  const { register, handleSubmit, errors, setValue } = useForm();\n\n  const onSubmit = async (values: any) => {\n    const inputQuerySearcher = values.inputQuerySearcher;\n\n    if (inputQuerySearcher.length > 0 && inputQuerySearcher.length <= 256) {\n      setSearcherQuery(inputQuerySearcher);\n      history.push('/search');\n    }\n  }\n\n  useEffect(() => {\n    if (searcherQuery !== undefined && searcherQuery === '') {\n      setValue('inputQuerySearcher', '');\n    }\n  }, [searcherQuery])\n\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      className=\"header-search\"\n    >\n      <label htmlFor=\"inputQuerySearcher\">\n        {/* <span className=\"label-text\">Buscar repositorio por lenguaje...</span> */}\n        <input\n          type=\"text\"\n          className=\"header-search__input\"\n          id=\"inputQuerySearcher\"\n          name=\"inputQuerySearcher\"\n          placeholder=\"Search repositories...\"\n          ref={register({ required: true })}\n          defaultValue={\"\"}\n        />\n      </label>\n    </form>\n  )\n}","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/context/SearcherContext.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/TableResults/TableResults.tsx",["56"],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Home/Home.tsx",["57"],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Spinner/Spinner.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":10,"column":35,"nodeType":"64","messageId":"65","endLine":10,"endColumn":41},{"ruleId":"66","severity":1,"message":"67","line":25,"column":6,"nodeType":"68","endLine":25,"endColumn":21,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":19,"column":6,"nodeType":"68","endLine":19,"endColumn":21,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"72","line":10,"column":6,"nodeType":"68","endLine":10,"endColumn":8,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'handleGetRepositories'. Either include it or remove the dependency array.",["77"],"React Hook useEffect has a missing dependency: 'resetSearcherQuery'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [searcherQuery, setValue]",{"range":"85","text":"86"},"Update the dependencies array to be: [handleGetRepositories, searcherQuery]",{"range":"87","text":"88"},"Update the dependencies array to be: [resetSearcherQuery]",{"range":"89","text":"90"},[836,851],"[searcherQuery, setValue]",[715,730],"[handleGetRepositories, searcherQuery]",[275,277],"[resetSearcherQuery]"]