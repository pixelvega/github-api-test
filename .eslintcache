[{"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/index.tsx":"1","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/reportWebVitals.ts":"2","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/routes/Routes.tsx":"3","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Unknown/Unknown.tsx":"4","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/App/App.tsx":"5","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/services/useGetRepositories.ts":"6","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Header/Header.tsx":"7","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Searcher/Searcher.tsx":"8","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/context/SearcherContext.tsx":"9","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/TableResults/TableResults.tsx":"10","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Home/Home.tsx":"11"},{"size":680,"mtime":1610059022372,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1608927878276,"results":"14","hashOfConfig":"13"},{"size":503,"mtime":1610059338313,"results":"15","hashOfConfig":"13"},{"size":96,"mtime":1609864586365,"results":"16","hashOfConfig":"13"},{"size":434,"mtime":1610059216386,"results":"17","hashOfConfig":"13"},{"size":751,"mtime":1609863986407,"results":"18","hashOfConfig":"13"},{"size":381,"mtime":1610210015313,"results":"19","hashOfConfig":"13"},{"size":1278,"mtime":1610210162317,"results":"20","hashOfConfig":"13"},{"size":595,"mtime":1610209342109,"results":"21","hashOfConfig":"13"},{"size":1864,"mtime":1610056734165,"results":"22","hashOfConfig":"13"},{"size":300,"mtime":1610209362881,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wgd25n",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/index.tsx",[],["48","49"],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/reportWebVitals.ts",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/routes/Routes.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Unknown/Unknown.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/App/App.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/services/useGetRepositories.ts",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Header/Header.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Searcher/Searcher.tsx",["50","51"],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/context/SearcherContext.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/TableResults/TableResults.tsx",["52"],"import { useEffect, useState, useContext } from 'react';\nimport { SearcherContext } from 'context/SearcherContext';\nimport useGetRepositories from 'services/useGetRepositories';\nimport { IGetRepositoriesResponse } from 'services/dto';\n\nexport default function TableResults() {\n  const { searcherQuery } = useContext(SearcherContext);\n  const { getRepositories,\n    loading,\n    error } = useGetRepositories();\n  const [apiResults, setApiResults] = useState<IGetRepositoriesResponse | null>(null);\n\n  useEffect(() => {\n    const querySearch = searcherQuery;\n    if (querySearch.length > 0 && querySearch.length <= 256) {\n      handleGetRepositories(querySearch);\n    }\n  }, [searcherQuery])\n\n  const handleGetRepositories = async (querySearch: string) => {\n    const apiResults = await getRepositories(querySearch);\n    setApiResults(apiResults);\n  }\n\n  return (\n    <>\n      <p>RESULTADOS DE BÚSQUEDA PARA: {searcherQuery}</p>\n      {loading && \"loading\"}\n      {(error && !loading) &&\n        <div>{error?.message}</div>\n      }\n      {!loading && !error && apiResults?.items &&\n\n        <table>\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            {apiResults.items.length >= 1 ?\n              <>\n                {apiResults.items.map((item: any) => {\n                  const { name, html_url, id } = item;\n                  return (\n                    <tr key={id}>\n                      <td>{name}</td>\n                      <td><a href={html_url}>{html_url}</a></td>\n                    </tr>\n                  )\n                })}\n              </>\n              :\n              <tr>\n                <td colSpan={2}>No hay resultados para tu búsqueda.</td>\n              </tr>\n            }\n          </tbody>\n        </table>\n      }\n    </>\n  )\n}","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Home/Home.tsx",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":9,"column":35,"nodeType":"60","messageId":"61","endLine":9,"endColumn":41},{"ruleId":"62","severity":1,"message":"63","line":24,"column":6,"nodeType":"64","endLine":24,"endColumn":21,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":18,"column":6,"nodeType":"64","endLine":18,"endColumn":21,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":9,"column":6,"nodeType":"64","endLine":9,"endColumn":8,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has a missing dependency: 'handleGetRepositories'. Either include it or remove the dependency array.",["73"],"React Hook useEffect has a missing dependency: 'resetSearcherQuery'. Either include it or remove the dependency array.",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [searcherQuery, setValue]",{"range":"81","text":"82"},"Update the dependencies array to be: [handleGetRepositories, searcherQuery]",{"range":"83","text":"84"},"Update the dependencies array to be: [resetSearcherQuery]",{"range":"85","text":"86"},[810,825],"[searcherQuery, setValue]",[673,688],"[handleGetRepositories, searcherQuery]",[253,255],"[resetSearcherQuery]"]