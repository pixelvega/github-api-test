[{"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/index.tsx":"1","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/reportWebVitals.ts":"2","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/routes/Routes.tsx":"3","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Unknown/Unknown.tsx":"4","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/App/App.tsx":"5","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/services/useGetRepositories.ts":"6","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Header/Header.tsx":"7","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Searcher/Searcher.tsx":"8","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/context/SearcherContext.tsx":"9","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/TableResults/TableResults.tsx":"10","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Home/Home.tsx":"11","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Spinner/Spinner.tsx":"12"},{"size":680,"mtime":1610280010800,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608927878276,"results":"15","hashOfConfig":"14"},{"size":516,"mtime":1610319994123,"results":"16","hashOfConfig":"14"},{"size":96,"mtime":1610280010795,"results":"17","hashOfConfig":"14"},{"size":434,"mtime":1610280010794,"results":"18","hashOfConfig":"14"},{"size":753,"mtime":1610319994124,"results":"19","hashOfConfig":"14"},{"size":381,"mtime":1610280010792,"results":"20","hashOfConfig":"14"},{"size":1377,"mtime":1610319994122,"results":"21","hashOfConfig":"14"},{"size":595,"mtime":1610280010796,"results":"22","hashOfConfig":"14"},{"size":2342,"mtime":1610800904737,"results":"23","hashOfConfig":"14"},{"size":488,"mtime":1610319994123,"results":"24","hashOfConfig":"14"},{"size":114,"mtime":1610280010793,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1wgd25n",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/index.tsx",[],["53","54"],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/reportWebVitals.ts",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/routes/Routes.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Unknown/Unknown.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/App/App.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/services/useGetRepositories.ts",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Header/Header.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Searcher/Searcher.tsx",["55","56"],"import { useContext, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { SearcherContext } from 'context/SearcherContext';\nimport { useHistory } from 'react-router-dom';\nimport './Searcher.scss';\n\nexport default function Searcher() {\n  const history = useHistory();\n  const { searcherQuery, setSearcherQuery } = useContext(SearcherContext);\n  const { register, handleSubmit, errors, setValue } = useForm();\n\n  const onSubmit = async (values: any) => {\n    const inputQuerySearcher = values.inputQuerySearcher;\n\n    if (inputQuerySearcher.length > 0 && inputQuerySearcher.length <= 256) {\n      setSearcherQuery(inputQuerySearcher);\n      history.push('/search');\n    }\n  }\n\n  useEffect(() => {\n    if (searcherQuery !== undefined && searcherQuery === '') {\n      setValue('inputQuerySearcher', '');\n    }\n  }, [searcherQuery])\n\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      className=\"header-search\"\n    >\n      <label htmlFor=\"inputQuerySearcher\">\n        {/* <span className=\"label-text\">Buscar repositorio por lenguaje...</span> */}\n        <input\n          type=\"text\"\n          className=\"header-search__input\"\n          id=\"inputQuerySearcher\"\n          name=\"inputQuerySearcher\"\n          placeholder=\"Search repositories...\"\n          ref={register({ required: true })}\n          defaultValue={\"\"}\n        />\n      </label>\n    </form>\n  )\n}","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/context/SearcherContext.tsx",[],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/TableResults/TableResults.tsx",["57"],"/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/pages/Home/Home.tsx",["58"],"import { useContext, useEffect } from 'react';\nimport { SearcherContext } from 'context/SearcherContext';\nimport './Home.scss';\n\nexport default function Home() {\n  const { resetSearcherQuery } = useContext(SearcherContext);\n\n  useEffect(() => {\n    resetSearcherQuery()\n  }, [])\n\n  return (\n    <div className=\"Home\">\n      <div className=\"bg-img\"></div>\n      <h1>GitHub API Test</h1>\n      <p>Search repositories by language</p>\n    </div>\n  )\n}","/Users/pixelvega/Desktop/repos/tests/github-api-test/src/components/blocks/Spinner/Spinner.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":10,"column":35,"nodeType":"65","messageId":"66","endLine":10,"endColumn":41},{"ruleId":"67","severity":1,"message":"68","line":26,"column":6,"nodeType":"69","endLine":26,"endColumn":21,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":24,"column":6,"nodeType":"69","endLine":24,"endColumn":21,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"73","line":11,"column":6,"nodeType":"69","endLine":11,"endColumn":8,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has missing dependencies: 'handleGetRepositories', 'paramsQuery', and 'setSearcherQuery'. Either include them or remove the dependency array.",["78"],"React Hook useEffect has a missing dependency: 'resetSearcherQuery'. Either include it or remove the dependency array.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [searcherQuery, setValue]",{"range":"86","text":"87"},"Update the dependencies array to be: [handleGetRepositories, paramsQuery, searcherQuery, setSearcherQuery]",{"range":"88","text":"89"},"Update the dependencies array to be: [resetSearcherQuery]",{"range":"90","text":"91"},[904,919],"[searcherQuery, setValue]",[961,976],"[handleGetRepositories, paramsQuery, searcherQuery, setSearcherQuery]",[316,318],"[resetSearcherQuery]"]